// The below code is generated by Claude 3.7

// app/api/users/logout/route.js
import { NextResponse } from "next/server";
import prisma from "@/utils/db";

export async function POST(request) {
  /*
    USER STORY FROM PROJECT DESCRIPTION:
    As a user, I want to sign up, log in, log out, and edit my profile. Profile 
    information includes first and last name, email, profile picture, and phone 
    number. Authentication should be handled with a proper JWT setup.
  */

  try {
    // Extract the refresh token from the request body
    const { refreshToken } = await request.json();

    if (!refreshToken) {
      return NextResponse.json(
        { message: "Refresh token is required" },
        { status: 400 }
      );
    }

    // Find and delete the refresh token from the database
    try {
      const deletedToken = await prisma.refreshToken.deleteMany({
        where: {
          token: refreshToken
        }
      });

      // Even if no token was found, we still return success
      // This prevents enumeration attacks and keeps the API behavior consistent
      return NextResponse.json({ message: "Logged out successfully" });
    } catch (dbError) {
      console.error("Database error during logout:", dbError);
      return NextResponse.json(
        { error: "Error processing logout" },
        { status: 500 }
      );
    }
  } catch (error) {
    console.error("Logout error:", error);
    return NextResponse.json(
      { error: "Failed to process logout request" },
      { status: 500 }
    );
  }
}