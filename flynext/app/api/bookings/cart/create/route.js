// The below code is generated by Claude 3.7

// app/api/bookings/cart/create/route.js
import { NextResponse } from "next/server";
import { authenticate } from "@/utils/auth";
import prisma from "@/utils/db";

export async function POST(request) {
  try {
    // Authenticate the user
    const userId = await authenticate(request);
    if (!userId) {
      return NextResponse.json(
        { error: "Authentication required" },
        { status: 401 }
      );
    }
    
    // Parse the request body to check if a custom name is provided
    let body = {};
    const contentType = request.headers.get("content-type");
    if (contentType && contentType.includes("application/json")) {
      try {
        body = await request.json();
      } catch (error) {
        return NextResponse.json(
          { error: "Invalid JSON in request body" },
          { status: 400 }
        );
      }
    }
    
    // Create a pending booking without a hotel ID, using the new name field
    const booking = await prisma.booking.create({
      data: {
        userId,
        name: body.name || "Untitled Booking", // Use custom name or default to "Shopping Cart"
        status: "pending",
        paymentStatus: "pending",
        totalPrice: "0" // Will be updated as items are added
      }
    });

    return NextResponse.json({ message: "Booking created successfully", booking });
  } catch (error) {
    console.error("Error creating shopping cart:", error);
    return NextResponse.json(
      { error: "Failed to create shopping cart", details: error.message },
      { status: 500 }
    );
  }
}